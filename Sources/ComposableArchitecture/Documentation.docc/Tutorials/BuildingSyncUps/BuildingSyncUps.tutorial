@Tutorials(name: "Building SyncUps") {
  @Intro(title: "Building SyncUps") {
    The SyncUps application is a recreation of one of Apple's more interesting demo applications,
    the Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus
    on domain modeling, controlling dependencies, and testability.
    
<!--    @Image(source: <#file#>, alt: "<#accessible description#>")-->
  }
  
  @Chapter(name: "What is SyncUps?") {
    Let's start with a tour of the application we will be building. It's called SyncUps, and it's
    a recreation of the Apple's Scrumdinger demo application. 
    
    It features multiple different navigation patterns, has interesting side effects such as a 
    timer and speech recognizer, and it's complex enough that it warrants a test suite to be
    confident it works the way we expect.
    
    @TutorialReference(tutorial: "doc:01-WhatIsSyncUps")
  }
  
  @Chapter(name: "Lists of sync ups") {
    We will begin building the SyncUps app from scratch by implementing the feature that powers
    the list of sync ups. It starts out as a simple feature, but it will become increasingly complex
    as the app evolves.
    
    @TutorialReference(tutorial: "doc:02-ListsOfSyncUps")
  }
}

<!---->
<!--@Tutorials(name: "The Composable Architecture") {-->
<!--  @Intro(title: "Meet the Composable Architecture") {-->
<!--    The Composable Architecture (TCA, for short) is a library for building applications in a -->
<!--    consistent and understandable way, with composition, testing, and ergonomics in mind. It can be -->
<!--    used in SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS).  -->
<!--    }-->
<!--    -->
<!--    @Chapter(name: "Essentials") {-->
<!--      Explore the basics of creating a new feature in the Composable Architecture, layering on-->
<!--      side effects, and writing a complete test suite for the feature.-->
<!--      -->
<!--      @Image(source: "01-homepage.png")-->
<!--      -->
<!--      @TutorialReference(tutorial: "doc:01-01-YourFirstFeature")-->
<!--      @TutorialReference(tutorial: "doc:01-02-AddingSideEffects")-->
<!--      @TutorialReference(tutorial: "doc:01-03-TestingYourFeature")-->
<!--    }-->
<!--    -->
<!--    @Chapter(name: "Navigation") {-->
<!--      Learn how to model your domains for navigation from parent feature to child feature, and how to-->
<!--      do so in a concise manner using optionals, enums and collections.-->
<!--      -->
<!--      @Image(source: "02-homepage.png")-->
<!--      -->
<!--      @TutorialReference(tutorial: "doc:02-01-YourFirstPresentation")-->
<!--      @TutorialReference(tutorial: "doc:02-02-MultipleDestinations")-->
<!--      @TutorialReference(tutorial: "doc:02-03-TestingPresentation")-->
<!--      @TutorialReference(tutorial: "doc:02-04-NavigationStacks")-->
<!--    }-->
<!--    -->
<!--    @Resources {-->
<!--      Additional resources for exploring how to build applications using the Composable Architecture.-->
<!--      -->
<!--      @Videos(destination: "https://www.pointfree.co") {-->
<!--        Point-Free is a video series that explores advanced topics in the Swift programming language.-->
<!--        We built nearly every part of the Composable Architecture from first principles in a [long-->
<!--        series of episodes](https://www.pointfree.co/collections/composable-architecture).-->
<!--        }-->
<!--        -->
<!--        @Forums(-->
<!--                destination: "https://github.com/pointfreeco/swift-composable-architecture/discussions"-->
<!--                ) {-->
<!--                  There are multiple places online to discuss the Composable Architecture with others that-->
<!--                  are also using the library.-->
<!--                  -->
<!--                  - [Join the community Slack](http://pointfree.co/slack-invite)-->
<!--                  - [Discuss on GitHub](https://github.com/pointfreeco/swift-composable-architecture/discussions)-->
<!--                  - [Discuss on Swift Forums](https://forums.swift.org/c/related-projects/swift-composable-architecture/61)-->
<!--                  - [Message us on Twitter](http://twitter.com/pointfreeco)-->
<!--                  - [Message us on Mastodon](http://hachyderm.io/@pointfreeco)-->
<!--                }-->
<!--        -->
<!--        @SampleCode(destination: "https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples") {-->
<!--          The library comes with lots of demo applications and case studies built in the -->
<!--          Composable Architecture.-->
<!--          -->
<!--          - [Case studies](https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/CaseStudies)-->
<!--          - [Search](https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/Search)-->
<!--          - [Speech Recognition](https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/SpeechRecognition)-->
<!--          - [SyncUps](https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/SyncUps)-->
<!--          - [TicTacToe](https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/TicTacToe)-->
<!--          - [Todos](https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/Todos)-->
<!--          - [Voice memos](https://github.com/pointfreeco/swift-composable-architecture/tree/main/Examples/VoiceMemos)-->
<!--        }-->
<!--        -->
<!--        @Documentation(destination: "https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture/") {-->
<!--          Browse the full documentation online.-->
<!--          -->
<!--          - [GitHub](https://pointfreeco.github.io/swift-composable-architecture/main/documentation/composablearchitecture)-->
<!--        }-->
<!--      }-->
<!--    }-->
